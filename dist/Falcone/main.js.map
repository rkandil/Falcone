{"version":3,"sources":["./src/app/services/caching-service/caching.service.ts","./src/environments/environment.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/services/wizard/wizard.service.ts","./src/app/services/errors/error-service.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pipes/id-creator.pipe.ts","./src/app/app.module.ts","./src/app/icon/icon.component.ts","./src/app/icon/icon.component.html","./src/app/services/falcon-http/falcone-getter.service.ts","./src/app/vehicle/vehicle.component.ts","./src/app/vehicle/vehicle.component.html","./src/app/services/falcon-store/falcon-store.service.ts","./src/app/app-routing.module.ts","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/common/unique-id.ts","./src/main.ts","./src/app/planet/planet.component.ts","./src/app/planet/planet.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Caching } from 'src/app/common/types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CachingService {\n\n  private cacheMap: Caching[] = [];\n\n  constructor() { }\n\n  private matchCache (id): Caching[] {\n    if (this.cacheMap){\n      return this.cacheMap.filter (cacheObj => {\n        return cacheObj.cachingId === id\n      });\n    }\n    return [];\n  }\n\n  public setCache (id: string, cachedObject: any) {\n    let cacheTmp = this.matchCache (id);\n    if (!cacheTmp.length) {\n      this.cacheMap.push ({cachingId: id, cachedObject: cachedObject});\n    } else {\n      this.cacheMap.forEach(cacheMap => {\n        cacheMap.cachedObject = cachedObject\n      });\n    }\n  }\n\n  public getCache (id: string):any {\n    console.log ('getCache 1');\n    let cacheTmp = this.matchCache (id);\n    if (cacheTmp.length) {\n      console.log ('getCache 2');\n      return cacheTmp[0].cachedObject\n    } else {\n      console.log ('getCache 3');\n      return null;\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  planets_url: \"https://findfalcone.herokuapp.com/planets\",\n  vehicle_url: \"https://findfalcone.herokuapp.com/vehicles\",\n  end_result_url: \"https://findfalcone.herokuapp.com/find\",\n  get_token: \"https://findfalcone.herokuapp.com/token\",\n  default_error_message: \"An unexpected error message occured\",\n  token_default_value: \"PlmVXHewGEQxKJIpWnKCBtNMepseniTM\",\n  maximum_number_steps: 8\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { ErrorService } from '../services/errors/error-service.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'fc-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n\n\n  constructor(@Inject(MAT_DIALOG_DATA) public errorMessage: string) { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","{{errorMessage}}\n\n<button mat-button mat-dialog-close>Cancel</button>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { hasUniquId, setUniquId } from 'src/app/common/unique-id';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WizardService {\n\n  private currentStage = 1;\n\n  private wiardSubject$: BehaviorSubject<number> = new BehaviorSubject<number>(this.currentStage);\n\n  constructor() { }\n\n  nextStep (uniqueId: string):number {\n    const prefix = 'wizard';\n    if (!hasUniquId (prefix, uniqueId)) {\n      this.wiardSubject$.next(++this.currentStage);\n      //this.componentIds.add(uniqueId);\n      setUniquId (prefix, uniqueId);\n    }\n    return this.currentStage;\n  }\n\n  resetWizard() {\n    this.wiardSubject$.next(1);  \n  }\n\n  getWizard() {\n    return this.wiardSubject$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ErrorCodes } from 'src/app/common/types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n    private errorSubject: Subject <string> = new Subject<string>();\n    private errorSubscriber$: Observable <string> = this.errorSubject.asObservable();\n    private  numberOfErrors = 0;\n    private interternetConnectivity = true;\n\n    constructor(private http: HttpClient) { }\n\n    readonly errors: ErrorCodes[]= [{\n        errorCode: 408,\n        errorMessage : 'Please check your internet connectivity and try again'\n    }, {\n        errorCode: 555,\n        errorMessage: 'Size of array exceeded the maximum size'\n    }\n\n  ];\n\n    private getErrorMessage (errorCode: number):string {\n      let filteredErrorArray:ErrorCodes[] = (this.errors.filter (errors => errors.errorCode === errorCode));\n      return filteredErrorArray\n      .length > 0? filteredErrorArray[0].errorMessage:null;\n    }\n\n\n    handleError(error) {\n      this.numberOfErrors++;\n      if (this.numberOfErrors > 2 && this.interternetConnectivity) {\n          //check internet connectivity by pinging Google\n          this.http.get('https://www.google.com/').toPromise().catch(err=> {\n              this.interternetConnectivity = false;\n              this.handleError(408);\n          })\n      }\n      const errorMessage = this.getErrorMessage(error) || environment.default_error_message;\n      this.errorSubject.next(errorMessage);\n    }\n\n    getErrorObservable ():Observable <string> {\n      return this.errorSubscriber$;\n    }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Falcone';\n}\n","<fal-main></fal-main>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'idCreator'\n})\nexport class IdCreatorPipe implements PipeTransform {\n\n  transform(id: string) {\n    if (!id) return id;\n    return id.toLowerCase().trim().split(' ').join ('-');\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport {MatDialogModule, MAT_DIALOG_DEFAULT_OPTIONS} from '@angular/material/dialog';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PlanetComponent } from './planet/planet.component';\nimport { VehicleComponent } from './vehicle/vehicle.component';\nimport { MainComponent } from './main/main.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { IdCreatorPipe } from './pipes/id-creator.pipe';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ErrorComponent } from './error/error.component';\nimport { IconComponent } from './icon/icon.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PlanetComponent,\n    VehicleComponent,\n    MainComponent,\n    IdCreatorPipe,\n    ErrorComponent,\n    IconComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatDialogModule\n\n  ],\n  providers: [{provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: false}}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'fc-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent implements OnInit {\n\n  @Input () iconName: string;\n  public iconUnicode: string;\n\n  //unicodes for the icons\n  private readonly iconMap = {\n    'Donlon': 9729,\n    'Enchai': 9730,\n    'Jebing': 9728,\n    'Sapir': 9732,\n    'Lerbin': 9733,\n    'Pingasor': 9731,\n    'Space pod': 9737,\n    'Space rocket': 9736,\n    'Space shuttle': 9735, \n    'Space ship': 9734\n  };\n\n  constructor(private sanitized: DomSanitizer) { }\n\n  ngOnInit(): void {\n     this.iconUnicode = '&#' + this.iconMap[this.iconName] + ';';\n  }\n\n}\n","<span class=\"icon\" [innerHTML]=\"iconUnicode\"></span>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Planet, Vehicle, Token } from '../../common/types';\nimport { map } from 'rxjs/operators';\nimport { FalconStoreService } from '../falcon-store/falcon-store.service';\nimport { environment } from 'src/environments/environment';\nimport { ErrorService } from '../errors/error-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FalconeGetterService {\n\n  constructor(private http: HttpClient, \n              private falconStoreService: FalconStoreService, \n              private errorService: ErrorService) { }\n\n  getPlanets ():Promise <Planet[]> {\n    return this.http.get(environment.planets_url).pipe(map(data=> {return data as Planet[]}))\n      .toPromise().catch(err=> {\n        let error:number;\n        if (err.response && err.response.status===408 ) {\n          error = err.response.status;\n        }\n        this.errorService.handleError(error || 0);\n        return null;\n      });\n  }\n\n  getVehicles ():Promise <Vehicle[]> {\n    return this.http.get(environment.vehicle_url).pipe(map(data=> {return data as Vehicle[]}))\n    .toPromise().catch(err=> {\n      let error:number;\n      if (err.response && err.response.status===408 ) {\n        error = err.response.status;\n      }\n      this.errorService.handleError(error || 0);\n      return null;\n    });  \n  }\n\n  getResult (): Promise<any> {\n    console.log ('entered getResult (): Promise<any> ');\n    return this.http.post (environment.end_result_url, this.falconStoreService.getPayLoad())//.pipe(map(data=> {return data as Vehicle[]}))\n                  .toPromise() \n                  .catch(err=> {\n                    let error:number;\n                    if (err.response && err.response.status===408 ) {\n                      error = err.response.status;\n                    }\n                    this.errorService.handleError(error || 0);\n                    return null;\n                  });\n  }\n\n  getToken (): Promise<string> {\n    return this.http.post(environment.get_token, null).pipe(map(data=> {return (data as Token).token}))\n        .toPromise().catch(err=> {\n          let error:number;\n          console.log ('error------', err);\n          if (err.response && err.response.status===408 ) {\n            error = err.response.status;\n          }\n          this.errorService.handleError(error || 0);\n          return null;\n        });\n  }\n}\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport { FalconeGetterService } from '../services/falcon-http/falcone-getter.service';\nimport { FalconStoreService } from '../services/falcon-store/falcon-store.service';\nimport { Vehicle, VehicleOutput } from '../common/types';\nimport { WizardService } from '../services/wizard/wizard.service';\nimport { generateUniqueId } from '../common/unique-id';\nimport { CachingService } from '../services/caching-service/caching.service';\n\n@Component({\n  selector: 'fc-vehicle',\n  templateUrl: './vehicle.component.html',\n  styleUrls: ['./vehicle.component.scss']\n})\nexport class VehicleComponent implements OnInit, OnChanges {\n\n  @Input () distance: number;\n  @Input () key: string;\n\n  @Output () nextStep: EventEmitter<VehicleOutput> = new EventEmitter<VehicleOutput>();\n  \n  public vehicle: Vehicle[];\n\n  private uniqueId: string;\n\n  constructor(private falconeGetterService: FalconeGetterService, \n                      private falconStoreService: FalconStoreService,\n                      private wizardService: WizardService,\n                      private cachingService: CachingService\n                      ) {\n                          this.uniqueId = generateUniqueId ();\n  }\n\n  ngOnInit(): void {\n    let tempCached = this.cachingService.getCache(\"vehicles\");\n    if (tempCached) {\n      this.vehicle = tempCached;\n    } else {\n      this.falconeGetterService.getVehicles().then (vehicles => {\n        this.vehicle = vehicles;\n        this.cachingService.setCache (\"vehicles\", vehicles);\n      });\n    }\n \n  }\n\n  ngOnChanges (changes: SimpleChanges) {\n    console.log ('this.distance before: ', this.distance);\n    this.distance = changes.distance.currentValue;\n    console.log ('this.distance after: ', this.distance);\n  }\n\n  setVehicle(event, vehicleName: string) {\n\n    console.log ('entered SetVehicle', event.target.value);\n\n    if (event.target.value === 'on') {\n      this.falconStoreService.setVehicle(vehicleName, this.uniqueId);\n      let currentStep =  this.wizardService.nextStep(this.uniqueId);\n      this.nextStep.emit({uniqueId: this.uniqueId, currentStep: currentStep});\n    }\n  }\n\n}\n","{{ distance }}\n\n<div *ngFor=\"let vehicle of vehicle\">\n    <input (change)=\"setVehicle($event, vehicle.name)\" type=\"radio\" [id]=\"vehicle.name | idCreator\" [name]=\"key\" [disabled]=\"vehicle.max_distance < distance\"/>\n    <label [for]=\"vehicle.name | idCreator\">{{vehicle.name}} <fc-icon [iconName]=\"vehicle.name\"></fc-icon></label>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { Falcons } from 'src/app/common/types';\nimport { environment } from 'src/environments/environment';\nimport { ErrorService } from '../errors/error-service.service';\nimport { hasUniquId, setUniquId } from 'src/app/common/unique-id';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FalconStoreService {\n\n  private returnFalcon:Falcons = {token: \"\", planet_names: [], vehicle_names: []};\n  private readonly maximum_array_size = environment.maximum_number_steps/2;\n\n  constructor(private errorService: ErrorService) { }\n\n  setToken (token: string) {\n    this.returnFalcon.token = token;\n  }\n\n  setPlanet (planetName: string, uniqueId: string) {\n    console.log ('enteredhere');\n    const prefix = 'store-planet';\n    if (!hasUniquId (prefix, uniqueId)) {\n      if (this.returnFalcon.planet_names.length < this.maximum_array_size) {\n        this.returnFalcon.planet_names.push(planetName);\n      } else {\n        this.errorService.handleError(555);\n      }\n      setUniquId (prefix, uniqueId);\n    } else {\n      this.returnFalcon.planet_names.pop();\n      this.returnFalcon.planet_names.push(planetName);\n    }\n    console.log ('this.returnFalcon = ', this.returnFalcon);\n  }\n\n  setVehicle (vehicleName: string, uniqueId: string) {\n    const prefix = 'store-vehicle';\n    if (!hasUniquId (prefix, uniqueId)) {\n      if (this.returnFalcon.vehicle_names.length < this.maximum_array_size) {\n        this.returnFalcon.vehicle_names.push(vehicleName);\n      } else {\n        this.errorService.handleError(555);\n      }\n      setUniquId (prefix, uniqueId);\n    } else {\n      //perform update\n      this.returnFalcon.vehicle_names.pop();\n      this.returnFalcon.vehicle_names.push(vehicleName);\n    }\n  }\n\n  getPayLoad ():Falcons {\n    return this.returnFalcon;\n  }\n\n  getToken() {\n    return this.returnFalcon.token;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, ComponentFactory, ComponentFactoryResolver, ViewChild, ViewContainerRef, ComponentRef } from '@angular/core';\nimport { WizardService } from '../services/wizard/wizard.service';\nimport { FalconStoreService } from '../services/falcon-store/falcon-store.service';\nimport { FalconeGetterService } from '../services/falcon-http/falcone-getter.service';\nimport { environment } from 'src/environments/environment';\nimport { ErrorService } from '../services/errors/error-service.service';\nimport { ErrorComponent } from '../error/error.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { VehicleComponent } from '../vehicle/vehicle.component';\nimport { PlanetOutput, ComponentReference, VehicleOutput } from '../common/types';\nimport { PlanetComponent } from '../planet/planet.component';\nimport { isOldComponent, pushComponentReference, returnLatestComponentMatch } from '../common/unique-id';\n\n@Component({\n  selector: 'fal-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  private errorMessage: string;\n\n  public firstVehicle: number;\n  public secondVehicle: number;\n  public thirdVehicle: number;\n  public fourthVehicle: number;\n  public currentStep: number;\n  public returnedResult: Promise<any>;\n  public token: string;\n  public finalStep = false;\n\n  @ViewChild(\"falcons\", { read: ViewContainerRef }) container;\n  componentRef: ComponentRef<any>;\n\n\n  constructor(private wizardService: WizardService,\n              private falconeGetterService: FalconeGetterService,\n              private falconStoreService: FalconStoreService,\n              private errorService: ErrorService,\n              private dialog: MatDialog,\n              private resolver: ComponentFactoryResolver\n              ) { }\n\n  ngOnInit(): void {\n    this.wizardService.getWizard().subscribe(val => {\n      this.currentStep = val;\n      if (this.currentStep === 1) {\n\n        this.falconeGetterService.getToken().then(token => {\n          this.falconStoreService.setToken(token);\n        }).then (() => {\n          console.log ('entered here in then');\n          //default token\n          if (!this.falconStoreService.getToken()){\n            this.falconStoreService.setToken(environment.token_default_value);\n          }\n        });\n      }\n    });\n\n    this.errorService.getErrorObservable().subscribe((data: string)=> {\n      if (data) {\n        this.dialog.open(ErrorComponent, {data: data})\n        this.errorMessage = data;\n      }\n    })\n  }\n\n  public findResult() {\n      console.log ('entered findResult()');\n    this.returnedResult = this.falconeGetterService.getResult();\n  }\n\n  public changeOutputVehicle(data: VehicleOutput) {\n    if (data.currentStep <= environment.maximum_number_steps){\n      if (isOldComponent (data.uniqueId)){\n        const factory: ComponentFactory<PlanetComponent> = this.resolver.resolveComponentFactory(PlanetComponent);\n        this.componentRef = this.container.createComponent(factory);\n        this.componentRef.instance.returnPlanetEmit.subscribe (event => {\n          this.changeOutputPlanet(event);\n        });\n        pushComponentReference(data.uniqueId, this.componentRef);\n      }\n    } else {\n      this.finalStep = true;\n    }\n  }\n\n\n\n  public changeOutputPlanet(data: PlanetOutput) {\n          console.log ('changeOutputPlanet');\n\n  \n      if (isOldComponent (data.uniqueId)){\n        const factory: ComponentFactory<VehicleComponent> = this.resolver.resolveComponentFactory(VehicleComponent);\n        this.componentRef = this.container.createComponent(factory);\n        this.componentRef.instance.key = \"vehicle\" + data.uniqueId;\n        this.componentRef.instance.distance = data.distance;\n\n        this.componentRef.instance.nextStep.subscribe(val => {\n          this.changeOutputVehicle(val);\n        }); \n        pushComponentReference(data.uniqueId, this.componentRef);\n        \n      } else {\n        returnLatestComponentMatch().instance.distance = data.distance;\n      }\n  }\n\n}\n","{{ currentStep }}\n<div #falcons>\n    <fc-planet (returnPlanetEmit)=\"changeOutputPlanet($event)\"></fc-planet>\n</div>\n\n\n\n\n{{finalStep}}\n<input type=\"button\" (click)=\"findResult()\" value=\"Find Results\" *ngIf=\"finalStep\" />\n<div>{{returnedResult | async}}</div>\n\n\n\n","import { ComponentReference } from './types';\n\nlet count = 0;\nlet componentIds = new Set <string>();\nlet componentMatch: ComponentReference[] = [];\nlet createdComponentsIds: ComponentReference[] = [];\n\nexport function isOldComponent (uniqueId: string): boolean {\n    componentMatch = createdComponentsIds.filter(componentRef=> {\n      return componentRef.uniqueId === uniqueId\n    });\n\n    return componentMatch.length === 0;\n  }\n\n  export function returnLatestComponentMatch():any {\n      if (componentMatch[0] && componentMatch[0].vehiclePlanetCompnent){\n        return componentMatch[0].vehiclePlanetCompnent;\n      }\n      return null;\n  }\n\nexport function pushComponentReference (uniqueId: string, vehiclePlanetComponent: any) {\n    createdComponentsIds.push ({uniqueId: uniqueId, vehiclePlanetCompnent: vehiclePlanetComponent});  \n}\n\nexport function generateUniqueId ():string {\n    return 'component' + count++;\n}\n\nexport function setUniquId (prefix: string, uniqueId: string) {\n    componentIds.add(prefix + '-' + uniqueId);\n}\n\nexport function hasUniquId (prefix: string, uniqueId: string):boolean {\n    return componentIds.has(prefix + '-' + uniqueId);\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FalconeGetterService } from '../services/falcon-http/falcone-getter.service';\nimport { Planet, PlanetOutput } from '../common/types';\nimport { FalconStoreService } from '../services/falcon-store/falcon-store.service';\nimport { WizardService } from '../services/wizard/wizard.service';\nimport { generateUniqueId } from '../common/unique-id';\nimport { CachingService } from '../services/caching-service/caching.service';\n\n@Component({\n  selector: 'fc-planet',\n  templateUrl: './planet.component.html',\n  styleUrls: ['./planet.component.scss']\n})\nexport class PlanetComponent implements OnInit {\n\n  planets: Planet[];\n  private uniqueId: string;\n  @Output() returnPlanetEmit: EventEmitter<PlanetOutput> = new EventEmitter<PlanetOutput>();\n\n  constructor(private falconeGetterService: FalconeGetterService, \n              private falconStoreService: FalconStoreService,\n              private wizardService: WizardService,\n              private cachingService: CachingService\n         ) { \n                this.uniqueId = generateUniqueId ();\n  }\n\n  ngOnInit(): void {\n    let tempCached = this.cachingService.getCache(\"planets\");\n    console.log (\"tempCached\", tempCached);\n    if (tempCached) {\n      this.planets = tempCached;\n    } else {\n      this.falconeGetterService.getPlanets().then((planets) => {\n        this.planets = planets\n        this.cachingService.setCache (\"planets\", planets);\n      });\n    }\n  }\n\n  changeValue(planet) {\n      console.log ('entered here, I hope, ',planet.target.value );\n    if (planet) {\n      let planetName = planet.target.value.split (':::$$$:::')[0];\n      let planetDistance = parseInt(planet.target.value.split (':::$$$:::')[1])\n      this.falconStoreService.setPlanet(planetName, this.uniqueId);\n      let currentStep = this.wizardService.nextStep(this.uniqueId);\n      console.log ('returnFalcon = ', {distance: planetDistance, currentStep: currentStep, uniqueId: this.uniqueId})\n      this.returnPlanetEmit.emit({distance: planetDistance, currentStep: currentStep, uniqueId: this.uniqueId});\n    }\n  }\n\n}\n","<select (change)=\"changeValue($event)\">\n    <option></option>\n    <option [value]=\"planet.name + ':::$$$:::' + planet.distance\" *ngFor = \"let planet of planets\">{{ planet.name }} <fc-icon [iconName]=\"planet.name\"></fc-icon></option>\n</select>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}